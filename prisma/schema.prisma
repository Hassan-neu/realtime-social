// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id         String     @id @default(uuid()) @db.Uuid
  email      String     @unique
  username   String     @unique
  full_name  String
  bio        String?
  avatar_url String?
  website    String?
  birth_date DateTime
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt @db.Timestamptz()
  posts      Post[]
  likes      Like[]
  bookmarks  Bookmark[]

  @@map("profiles")
}

model Post {
  id         String     @id @default(uuid()) @db.Uuid()
  content    String
  media_url  String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt @db.Timestamptz()
  user       Profile    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String     @db.Uuid()
  reply_to   String?
  likes      Like[]
  bookmarks  Bookmark[]

  @@map("posts")
}

model Like {
  id         String   @id @default(uuid()) @db.Uuid()
  user_id    String   @db.Uuid()
  user       Profile  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post_id    String   @db.Uuid()
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())

  @@map("likes")
}

model Bookmark {
  id         String   @id @default(uuid()) @db.Uuid()
  user_id    String   @db.Uuid()
  user       Profile  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post_id    String   @db.Uuid()
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())

  @@map("bookmarks")
}
